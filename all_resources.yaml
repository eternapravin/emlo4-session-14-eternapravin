apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-03-21T07:16:37Z"
    generateName: model-server-588897c84c-
    labels:
      app.kubernetes.io/name: model-server
      pod-template-hash: 588897c84c
    name: model-server-588897c84c-gg598
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: model-server-588897c84c
      uid: 4686b832-9764-46e2-bc5a-2c4aeb60eacb
    resourceVersion: "612553"
    uid: e127e759-375d-4f29-b9ec-fc84e6d20d49
  spec:
    containers:
    - env:
      - name: REDIS_HOST
        valueFrom:
          configMapKeyRef:
            key: hostname
            name: redis-config-v1
      - name: REDIS_PORT
        valueFrom:
          configMapKeyRef:
            key: port
            name: redis-config-v1
      - name: REDIS_PASSWORD
        valueFrom:
          secretKeyRef:
            key: db_password
            name: redis-secret-v1
      - name: MODEL_NAME
        valueFrom:
          configMapKeyRef:
            key: model_name
            name: model-server-config-v1
      image: model-server:latest
      imagePullPolicy: Never
      name: model-server
      ports:
      - containerPort: 8000
        name: http
        protocol: TCP
      resources:
        limits:
          cpu: "1"
          memory: 2Gi
        requests:
          cpu: "1"
          memory: 2Gi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8sw94
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-8sw94
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T07:16:37Z"
      message: '0/1 nodes are available: 1 Insufficient cpu. preemption: 0/1 nodes
        are available: 1 No preemption victims found for incoming pod.'
      reason: Unschedulable
      status: "False"
      type: PodScheduled
    phase: Pending
    qosClass: Guaranteed
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-03-21T07:16:37Z"
    generateName: redis-6cb764f4b8-
    labels:
      app.kubernetes.io/name: redis
      pod-template-hash: 6cb764f4b8
      role: master
    name: redis-6cb764f4b8-d9lsv
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: redis-6cb764f4b8
      uid: cb54e2fc-25ae-448e-a6e3-d93c7aa47093
    resourceVersion: "616929"
    uid: 82ff67a0-b858-4cc2-b8dd-402692cb3b35
  spec:
    containers:
    - args:
      - --requirepass
      - $(REDIS_PASSWORD)
      command:
      - redis-server
      env:
      - name: REDIS_PASSWORD
        valueFrom:
          secretKeyRef:
            key: db_password
            name: redis-secret-v1
      image: redis:7.4.1
      imagePullPolicy: IfNotPresent
      name: redis
      ports:
      - containerPort: 6379
        name: redis
        protocol: TCP
      resources:
        limits:
          cpu: 200m
          memory: 200Mi
        requests:
          cpu: 200m
          memory: 200Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /data
        name: redis-storage
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-clm2n
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: redis-storage
      persistentVolumeClaim:
        claimName: redis-pvc
    - name: kube-api-access-clm2n
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T09:01:44Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T09:01:42Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T09:01:44Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T09:01:44Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T09:01:42Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://fd130f16b9c6216136f5a4f575fb4ad10b62e1e94ad0d93f3975fc6d25db69b2
      image: redis:7.4.1
      imageID: docker-pullable://redis@sha256:bb142a9c18ac18a16713c1491d779697b4e107c22a97266616099d288237ef47
      lastState: {}
      name: redis
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-21T09:01:43Z"
      volumeMounts:
      - mountPath: /data
        name: redis-storage
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-clm2n
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.49.2
    hostIPs:
    - ip: 192.168.49.2
    phase: Running
    podIP: 10.244.0.163
    podIPs:
    - ip: 10.244.0.163
    qosClass: Guaranteed
    startTime: "2025-03-21T09:01:42Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-03-21T07:16:37Z"
    generateName: web-server-55bc6c44bc-
    labels:
      app.kubernetes.io/name: web-server
      pod-template-hash: 55bc6c44bc
    name: web-server-55bc6c44bc-fww4q
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: web-server-55bc6c44bc
      uid: ced1fb5f-a5f2-4afe-9265-11299e0181ea
    resourceVersion: "613826"
    uid: c57c0dee-3f6d-4585-9040-aff2be8c246e
  spec:
    containers:
    - env:
      - name: REDIS_HOST
        valueFrom:
          configMapKeyRef:
            key: hostname
            name: redis-config-v1
      - name: REDIS_PORT
        valueFrom:
          configMapKeyRef:
            key: port
            name: redis-config-v1
      - name: REDIS_PASSWORD
        valueFrom:
          secretKeyRef:
            key: db_password
            name: redis-secret-v1
      - name: MODEL_SERVER_URL
        valueFrom:
          configMapKeyRef:
            key: model_server_url
            name: model-server-config-v1
      image: web-server:latest
      imagePullPolicy: Never
      name: web-server
      ports:
      - containerPort: 80
        name: http
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cjfbn
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-cjfbn
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T07:59:56Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T07:16:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T07:59:56Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T07:59:56Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T07:16:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://6e3451ecbdd2220ab1cff7b7b65e70eec4ad6a00ab217f3270fd8fc9f58b3488
      image: web-server:latest
      imageID: docker://sha256:6ee8c7edd8478068f066ce02f4a5f814fb983b07bff0d8ad5b1227b9ea91832f
      lastState:
        terminated:
          containerID: docker://06ff7ad29e9ebbd9433f339faac0f757b83bf44e818f1d283f13799b5a0f3074
          exitCode: 0
          finishedAt: "2025-03-21T07:38:54Z"
          reason: Completed
          startedAt: "2025-03-21T07:16:38Z"
      name: web-server
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-03-21T07:59:54Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cjfbn
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.49.2
    hostIPs:
    - ip: 192.168.49.2
    phase: Running
    podIP: 10.244.0.160
    podIPs:
    - ip: 10.244.0.160
    qosClass: BestEffort
    startTime: "2025-03-21T07:16:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-03-21T09:01:41Z"
    generateName: model-server-588897c84c-
    labels:
      app.kubernetes.io/name: model-server
      pod-template-hash: 588897c84c
    name: model-server-588897c84c-ffmxp
    namespace: dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: model-server-588897c84c
      uid: 144f3f8b-a5c8-4b77-98d4-0300a843734f
    resourceVersion: "616890"
    uid: 8f707d14-022f-42f0-b614-dd0f97ceadea
  spec:
    containers:
    - env:
      - name: REDIS_HOST
        valueFrom:
          configMapKeyRef:
            key: hostname
            name: redis-config-v1
      - name: REDIS_PORT
        valueFrom:
          configMapKeyRef:
            key: port
            name: redis-config-v1
      - name: REDIS_PASSWORD
        valueFrom:
          secretKeyRef:
            key: db_password
            name: redis-secret-v1
      - name: MODEL_NAME
        valueFrom:
          configMapKeyRef:
            key: model_name
            name: model-server-config-v1
      image: model-server:latest
      imagePullPolicy: Never
      name: model-server
      ports:
      - containerPort: 8000
        name: http
        protocol: TCP
      resources:
        limits:
          cpu: "1"
          memory: 2Gi
        requests:
          cpu: "1"
          memory: 2Gi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2gdsc
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-2gdsc
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T09:01:41Z"
      message: '0/1 nodes are available: 1 Insufficient cpu. preemption: 0/1 nodes
        are available: 1 No preemption victims found for incoming pod.'
      reason: Unschedulable
      status: "False"
      type: PodScheduled
    phase: Pending
    qosClass: Guaranteed
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-03-21T05:50:08Z"
    generateName: redis-6cb764f4b8-
    labels:
      app.kubernetes.io/name: redis
      pod-template-hash: 6cb764f4b8
      role: master
    name: redis-6cb764f4b8-6kvgf
    namespace: dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: redis-6cb764f4b8
      uid: 3eaacbec-4010-4491-aab8-1112561e3dc8
    resourceVersion: "613780"
    uid: c293cdae-45d1-4a13-9803-0dbbb51aa3b2
  spec:
    containers:
    - args:
      - --requirepass
      - $(REDIS_PASSWORD)
      command:
      - redis-server
      env:
      - name: REDIS_PASSWORD
        valueFrom:
          secretKeyRef:
            key: db_password
            name: redis-secret-v1
      image: redis:7.4.1
      imagePullPolicy: IfNotPresent
      name: redis
      ports:
      - containerPort: 6379
        name: redis
        protocol: TCP
      resources:
        limits:
          cpu: 200m
          memory: 200Mi
        requests:
          cpu: 200m
          memory: 200Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /data
        name: redis-storage
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-85vdj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: redis-storage
      persistentVolumeClaim:
        claimName: redis-pvc
    - name: kube-api-access-85vdj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T07:59:54Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T05:50:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T07:59:54Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T07:59:54Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T05:50:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://db6ebc600a34a0f4925c4302d4020ad1c1400bb9dafda0b2db07b420a19b6880
      image: redis:7.4.1
      imageID: docker-pullable://redis@sha256:bb142a9c18ac18a16713c1491d779697b4e107c22a97266616099d288237ef47
      lastState:
        terminated:
          containerID: docker://c2ee30ab6707ddc7b9833af5e24eb4f377ab69f1871b9f4779db3f9fdbd63315
          exitCode: 0
          finishedAt: "2025-03-21T07:38:52Z"
          reason: Completed
          startedAt: "2025-03-21T05:50:09Z"
      name: redis
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-03-21T07:59:53Z"
      volumeMounts:
      - mountPath: /data
        name: redis-storage
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-85vdj
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.49.2
    hostIPs:
    - ip: 192.168.49.2
    phase: Running
    podIP: 10.244.0.157
    podIPs:
    - ip: 10.244.0.157
    qosClass: Guaranteed
    startTime: "2025-03-21T05:50:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-03-21T05:50:08Z"
    generateName: web-server-55bc6c44bc-
    labels:
      app.kubernetes.io/name: web-server
      pod-template-hash: 55bc6c44bc
    name: web-server-55bc6c44bc-d67c5
    namespace: dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: web-server-55bc6c44bc
      uid: 2da4d6df-0fbc-494c-bf4e-3559b41f14c0
    resourceVersion: "613828"
    uid: 1b509ceb-e33b-49b2-9e91-efa1d8a3a86f
  spec:
    containers:
    - env:
      - name: REDIS_HOST
        valueFrom:
          configMapKeyRef:
            key: hostname
            name: redis-config-v1
      - name: REDIS_PORT
        valueFrom:
          configMapKeyRef:
            key: port
            name: redis-config-v1
      - name: REDIS_PASSWORD
        valueFrom:
          secretKeyRef:
            key: db_password
            name: redis-secret-v1
      - name: MODEL_SERVER_URL
        valueFrom:
          configMapKeyRef:
            key: model_server_url
            name: model-server-config-v1
      image: web-server:latest
      imagePullPolicy: Never
      name: web-server
      ports:
      - containerPort: 80
        name: http
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7gxfd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-7gxfd
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T07:59:56Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T05:50:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T07:59:56Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T07:59:56Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T05:50:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://3d12859c545838bda2e1e1cf6a6499640f09634fbdd1d7dc9ca93e3af8c866a8
      image: web-server:latest
      imageID: docker://sha256:6ee8c7edd8478068f066ce02f4a5f814fb983b07bff0d8ad5b1227b9ea91832f
      lastState:
        terminated:
          containerID: docker://723c03fc3b741e98718edd30881941d15f3219a38449dd0fe8c34786a64010d0
          exitCode: 0
          finishedAt: "2025-03-21T07:38:54Z"
          reason: Completed
          startedAt: "2025-03-21T05:50:09Z"
      name: web-server
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-03-21T07:59:54Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7gxfd
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.49.2
    hostIPs:
    - ip: 192.168.49.2
    phase: Running
    podIP: 10.244.0.159
    podIPs:
    - ip: 10.244.0.159
    qosClass: BestEffort
    startTime: "2025-03-21T05:50:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-03-12T13:24:33Z"
    generateName: coredns-668d6bf9bc-
    labels:
      k8s-app: kube-dns
      pod-template-hash: 668d6bf9bc
    name: coredns-668d6bf9bc-f8jnb
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-668d6bf9bc
      uid: 2cb08c8b-b2eb-4141-bc83-e8cb891d87ef
    resourceVersion: "613860"
    uid: e979f071-203d-4606-bfe4-b4535905025e
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: registry.k8s.io/coredns/coredns:v1.11.3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-84rck
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: minikube
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        name: coredns
      name: config-volume
    - name: kube-api-access-84rck
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T07:59:55Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-03-12T13:24:33Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T08:00:29Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T08:00:29Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-12T13:24:33Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://810ddbf567ae29d2522b80245070240bd6b5407a5ea0a94b78d9ae867b09920d
      image: registry.k8s.io/coredns/coredns:v1.11.3
      imageID: docker-pullable://registry.k8s.io/coredns/coredns@sha256:9caabbf6238b189a65d0d6e6ac138de60d6a1c419e5a341fbbb7c78382559c6e
      lastState:
        terminated:
          containerID: docker://c01f4e11aaab301a84abdea18d7ef71b8e615444ddc2375409521a5df27c4ffb
          exitCode: 0
          finishedAt: "2025-03-21T07:38:57Z"
          reason: Completed
          startedAt: "2025-03-12T13:24:34Z"
      name: coredns
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-03-21T07:59:52Z"
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-84rck
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.49.2
    hostIPs:
    - ip: 192.168.49.2
    phase: Running
    podIP: 10.244.0.156
    podIPs:
    - ip: 10.244.0.156
    qosClass: Burstable
    startTime: "2025-03-12T13:24:33Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubeadm.kubernetes.io/etcd.advertise-client-urls: https://192.168.49.2:2379
      kubernetes.io/config.hash: 2b4b75c2a289008e0b381891e9683040
      kubernetes.io/config.mirror: 2b4b75c2a289008e0b381891e9683040
      kubernetes.io/config.seen: "2025-03-12T13:24:28.214728301Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2025-03-12T13:24:28Z"
    labels:
      component: etcd
      tier: control-plane
    name: etcd-minikube
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: minikube
      uid: 0cd03f20-444a-449c-ba3a-737174626762
    resourceVersion: "613842"
    uid: ec30c234-a3ab-4c15-b54a-511dc80dfe96
  spec:
    containers:
    - command:
      - etcd
      - --advertise-client-urls=https://192.168.49.2:2379
      - --cert-file=/var/lib/minikube/certs/etcd/server.crt
      - --client-cert-auth=true
      - --data-dir=/var/lib/minikube/etcd
      - --experimental-initial-corrupt-check=true
      - --experimental-watch-progress-notify-interval=5s
      - --initial-advertise-peer-urls=https://192.168.49.2:2380
      - --initial-cluster=minikube=https://192.168.49.2:2380
      - --key-file=/var/lib/minikube/certs/etcd/server.key
      - --listen-client-urls=https://127.0.0.1:2379,https://192.168.49.2:2379
      - --listen-metrics-urls=http://127.0.0.1:2381
      - --listen-peer-urls=https://192.168.49.2:2380
      - --name=minikube
      - --peer-cert-file=/var/lib/minikube/certs/etcd/peer.crt
      - --peer-client-cert-auth=true
      - --peer-key-file=/var/lib/minikube/certs/etcd/peer.key
      - --peer-trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt
      - --proxy-refresh-interval=70000
      - --snapshot-count=10000
      - --trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt
      image: registry.k8s.io/etcd:3.5.16-0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /livez
          port: 2381
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: etcd
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: 127.0.0.1
          path: /readyz
          port: 2381
          scheme: HTTP
        periodSeconds: 1
        successThreshold: 1
        timeoutSeconds: 15
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /readyz
          port: 2381
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/minikube/etcd
        name: etcd-data
      - mountPath: /var/lib/minikube/certs/etcd
        name: etcd-certs
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/minikube/certs/etcd
        type: DirectoryOrCreate
      name: etcd-certs
    - hostPath:
        path: /var/lib/minikube/etcd
        type: DirectoryOrCreate
      name: etcd-data
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T07:59:45Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T07:59:42Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T07:59:57Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T07:59:57Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T07:59:42Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://74f5e6686f52ddeb7048cb48ac1f0baca207b366937331626830171358aa0df5
      image: registry.k8s.io/etcd:3.5.16-0
      imageID: docker-pullable://registry.k8s.io/etcd@sha256:c6a9d11cc5c04b114ccdef39a9265eeef818e3d02f5359be035ae784097fdec5
      lastState:
        terminated:
          containerID: docker://5a7b4969c145946c4fec38812ea0efb52a76d9355772a76816386957000cb21b
          exitCode: 0
          finishedAt: "2025-03-21T07:38:53Z"
          reason: Completed
          startedAt: "2025-03-12T13:24:22Z"
      name: etcd
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-03-21T07:59:44Z"
    hostIP: 192.168.49.2
    hostIPs:
    - ip: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: Burstable
    startTime: "2025-03-21T07:59:42Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint: 192.168.49.2:8443
      kubernetes.io/config.hash: d72d0a4cf4be077c9919d46b7358a5e8
      kubernetes.io/config.mirror: d72d0a4cf4be077c9919d46b7358a5e8
      kubernetes.io/config.seen: "2025-03-12T13:24:28.214735226Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2025-03-12T13:24:28Z"
    labels:
      component: kube-apiserver
      tier: control-plane
    name: kube-apiserver-minikube
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: minikube
      uid: 0cd03f20-444a-449c-ba3a-737174626762
    resourceVersion: "613844"
    uid: c7771a9d-4e6c-46f5-8865-50e572c03c0f
  spec:
    containers:
    - command:
      - kube-apiserver
      - --advertise-address=192.168.49.2
      - --allow-privileged=true
      - --authorization-mode=Node,RBAC
      - --client-ca-file=/var/lib/minikube/certs/ca.crt
      - --enable-admission-plugins=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota
      - --enable-bootstrap-token-auth=true
      - --etcd-cafile=/var/lib/minikube/certs/etcd/ca.crt
      - --etcd-certfile=/var/lib/minikube/certs/apiserver-etcd-client.crt
      - --etcd-keyfile=/var/lib/minikube/certs/apiserver-etcd-client.key
      - --etcd-servers=https://127.0.0.1:2379
      - --kubelet-client-certificate=/var/lib/minikube/certs/apiserver-kubelet-client.crt
      - --kubelet-client-key=/var/lib/minikube/certs/apiserver-kubelet-client.key
      - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
      - --proxy-client-cert-file=/var/lib/minikube/certs/front-proxy-client.crt
      - --proxy-client-key-file=/var/lib/minikube/certs/front-proxy-client.key
      - --requestheader-allowed-names=front-proxy-client
      - --requestheader-client-ca-file=/var/lib/minikube/certs/front-proxy-ca.crt
      - --requestheader-extra-headers-prefix=X-Remote-Extra-
      - --requestheader-group-headers=X-Remote-Group
      - --requestheader-username-headers=X-Remote-User
      - --secure-port=8443
      - --service-account-issuer=https://kubernetes.default.svc.cluster.local
      - --service-account-key-file=/var/lib/minikube/certs/sa.pub
      - --service-account-signing-key-file=/var/lib/minikube/certs/sa.key
      - --service-cluster-ip-range=10.96.0.0/12
      - --tls-cert-file=/var/lib/minikube/certs/apiserver.crt
      - --tls-private-key-file=/var/lib/minikube/certs/apiserver.key
      image: registry.k8s.io/kube-apiserver:v1.32.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 192.168.49.2
          path: /livez
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-apiserver
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: 192.168.49.2
          path: /readyz
          port: 8443
          scheme: HTTPS
        periodSeconds: 1
        successThreshold: 1
        timeoutSeconds: 15
      resources:
        requests:
          cpu: 250m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 192.168.49.2
          path: /livez
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: ca-certs
        readOnly: true
      - mountPath: /etc/ca-certificates
        name: etc-ca-certificates
        readOnly: true
      - mountPath: /var/lib/minikube/certs
        name: k8s-certs
        readOnly: true
      - mountPath: /usr/local/share/ca-certificates
        name: usr-local-share-ca-certificates
        readOnly: true
      - mountPath: /usr/share/ca-certificates
        name: usr-share-ca-certificates
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: DirectoryOrCreate
      name: ca-certs
    - hostPath:
        path: /etc/ca-certificates
        type: DirectoryOrCreate
      name: etc-ca-certificates
    - hostPath:
        path: /var/lib/minikube/certs
        type: DirectoryOrCreate
      name: k8s-certs
    - hostPath:
        path: /usr/local/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-local-share-ca-certificates
    - hostPath:
        path: /usr/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-share-ca-certificates
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T07:59:45Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T07:59:42Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T07:59:58Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T07:59:58Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T07:59:42Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://551ec8ce1b1df0fd038a949dbe69b7ad54a77754db8afa629d99ed64b0b585a9
      image: registry.k8s.io/kube-apiserver:v1.32.0
      imageID: docker-pullable://registry.k8s.io/kube-apiserver@sha256:ebc0ce2d7e647dd97980ec338ad81496c111741ab4ad05e7c5d37539aaf7dc3b
      lastState:
        terminated:
          containerID: docker://06113136a0387a5c212532b858aa9fd18921e909c21da1df8b14353208b76e7d
          exitCode: 137
          finishedAt: "2025-03-21T07:39:02Z"
          reason: Error
          startedAt: "2025-03-12T13:24:22Z"
      name: kube-apiserver
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-03-21T07:59:44Z"
    hostIP: 192.168.49.2
    hostIPs:
    - ip: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: Burstable
    startTime: "2025-03-21T07:59:42Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: 843c74f7b3bc7d7040a05c31708a6a30
      kubernetes.io/config.mirror: 843c74f7b3bc7d7040a05c31708a6a30
      kubernetes.io/config.seen: "2025-03-12T13:24:28.214737083Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2025-03-12T13:24:28Z"
    labels:
      component: kube-controller-manager
      tier: control-plane
    name: kube-controller-manager-minikube
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: minikube
      uid: 0cd03f20-444a-449c-ba3a-737174626762
    resourceVersion: "613822"
    uid: 02ed8431-f7c9-4ee5-8893-d617ccd9da79
  spec:
    containers:
    - command:
      - kube-controller-manager
      - --allocate-node-cidrs=true
      - --authentication-kubeconfig=/etc/kubernetes/controller-manager.conf
      - --authorization-kubeconfig=/etc/kubernetes/controller-manager.conf
      - --bind-address=127.0.0.1
      - --client-ca-file=/var/lib/minikube/certs/ca.crt
      - --cluster-cidr=10.244.0.0/16
      - --cluster-name=mk
      - --cluster-signing-cert-file=/var/lib/minikube/certs/ca.crt
      - --cluster-signing-key-file=/var/lib/minikube/certs/ca.key
      - --controllers=*,bootstrapsigner,tokencleaner
      - --kubeconfig=/etc/kubernetes/controller-manager.conf
      - --leader-elect=false
      - --requestheader-client-ca-file=/var/lib/minikube/certs/front-proxy-ca.crt
      - --root-ca-file=/var/lib/minikube/certs/ca.crt
      - --service-account-private-key-file=/var/lib/minikube/certs/sa.key
      - --service-cluster-ip-range=10.96.0.0/12
      - --use-service-account-credentials=true
      image: registry.k8s.io/kube-controller-manager:v1.32.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10257
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-controller-manager
      resources:
        requests:
          cpu: 200m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10257
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: ca-certs
        readOnly: true
      - mountPath: /etc/ca-certificates
        name: etc-ca-certificates
        readOnly: true
      - mountPath: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
        name: flexvolume-dir
      - mountPath: /var/lib/minikube/certs
        name: k8s-certs
        readOnly: true
      - mountPath: /etc/kubernetes/controller-manager.conf
        name: kubeconfig
        readOnly: true
      - mountPath: /usr/local/share/ca-certificates
        name: usr-local-share-ca-certificates
        readOnly: true
      - mountPath: /usr/share/ca-certificates
        name: usr-share-ca-certificates
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: DirectoryOrCreate
      name: ca-certs
    - hostPath:
        path: /etc/ca-certificates
        type: DirectoryOrCreate
      name: etc-ca-certificates
    - hostPath:
        path: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
        type: DirectoryOrCreate
      name: flexvolume-dir
    - hostPath:
        path: /var/lib/minikube/certs
        type: DirectoryOrCreate
      name: k8s-certs
    - hostPath:
        path: /etc/kubernetes/controller-manager.conf
        type: FileOrCreate
      name: kubeconfig
    - hostPath:
        path: /usr/local/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-local-share-ca-certificates
    - hostPath:
        path: /usr/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-share-ca-certificates
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T07:59:45Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T07:59:43Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T07:59:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T07:59:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T07:59:43Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://848ae58c5245f236f6ba3ce61a2818fcd3a51c3722e1d653023e9f4e551e1c75
      image: registry.k8s.io/kube-controller-manager:v1.32.0
      imageID: docker-pullable://registry.k8s.io/kube-controller-manager@sha256:c8faedf1a5f3981ffade770c696b676d30613681a95be3287c1f7eec50e49b6d
      lastState:
        terminated:
          containerID: docker://9beb4a3abffaa8477b55b10959a1eb71e7a6966503ece5fc86f10391b467a5f0
          exitCode: 2
          finishedAt: "2025-03-21T07:38:52Z"
          reason: Error
          startedAt: "2025-03-12T13:24:22Z"
      name: kube-controller-manager
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-03-21T07:59:43Z"
    hostIP: 192.168.49.2
    hostIPs:
    - ip: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: Burstable
    startTime: "2025-03-21T07:59:43Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-03-12T13:24:33Z"
    generateName: kube-proxy-
    labels:
      controller-revision-hash: 64b9dbc74b
      k8s-app: kube-proxy
      pod-template-generation: "1"
    name: kube-proxy-n5nb8
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: aad309d7-52ea-486f-a891-bda6e445a69a
    resourceVersion: "613820"
    uid: 5cd3462f-8679-4f7d-8304-d07c29168180
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - minikube
    containers:
    - command:
      - /usr/local/bin/kube-proxy
      - --config=/var/lib/kube-proxy/config.conf
      - --hostname-override=$(NODE_NAME)
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.k8s.io/kube-proxy:v1.32.0
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kube-proxy
        name: kube-proxy
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j2xt9
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: minikube
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: kube-proxy
      name: kube-proxy
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - name: kube-api-access-j2xt9
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T07:59:55Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-03-12T13:24:33Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T07:59:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T07:59:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-12T13:24:33Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://016190ae3cdc1d3c5bcfd7d2b8116f620f8a720464d8fed077489a9ba731c35c
      image: registry.k8s.io/kube-proxy:v1.32.0
      imageID: docker-pullable://registry.k8s.io/kube-proxy@sha256:6aee00d0c7f4869144d1bdbbed7572cd55fd1a4d58fef5a21f53836054cb39b4
      lastState:
        terminated:
          containerID: docker://7f03409fbb4df0b4bc0849c17e1360c0eee1fca2a851930a4a76f9706f8dda4e
          exitCode: 2
          finishedAt: "2025-03-21T07:38:52Z"
          reason: Error
          startedAt: "2025-03-12T13:24:33Z"
      name: kube-proxy
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-03-21T07:59:52Z"
      volumeMounts:
      - mountPath: /var/lib/kube-proxy
        name: kube-proxy
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j2xt9
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.49.2
    hostIPs:
    - ip: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: BestEffort
    startTime: "2025-03-12T13:24:33Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: d14ce008bee3a1f3bd7cf547688f9dfe
      kubernetes.io/config.mirror: d14ce008bee3a1f3bd7cf547688f9dfe
      kubernetes.io/config.seen: "2025-03-12T13:24:21.315436191Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2025-03-12T13:24:26Z"
    labels:
      component: kube-scheduler
      tier: control-plane
    name: kube-scheduler-minikube
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: minikube
      uid: 0cd03f20-444a-449c-ba3a-737174626762
    resourceVersion: "613824"
    uid: 10f8e718-c095-419f-90cc-d6b42dc5962a
  spec:
    containers:
    - command:
      - kube-scheduler
      - --authentication-kubeconfig=/etc/kubernetes/scheduler.conf
      - --authorization-kubeconfig=/etc/kubernetes/scheduler.conf
      - --bind-address=127.0.0.1
      - --kubeconfig=/etc/kubernetes/scheduler.conf
      - --leader-elect=false
      image: registry.k8s.io/kube-scheduler:v1.32.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /livez
          port: 10259
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-scheduler
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: 127.0.0.1
          path: /readyz
          port: 10259
          scheme: HTTPS
        periodSeconds: 1
        successThreshold: 1
        timeoutSeconds: 15
      resources:
        requests:
          cpu: 100m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /livez
          port: 10259
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/kubernetes/scheduler.conf
        name: kubeconfig
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/scheduler.conf
        type: FileOrCreate
      name: kubeconfig
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T07:59:45Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T07:59:42Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T07:59:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T07:59:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T07:59:42Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://22cc84335b46221768231d41880a0aa53192486f8abd46075ca7d0651e5bb319
      image: registry.k8s.io/kube-scheduler:v1.32.0
      imageID: docker-pullable://registry.k8s.io/kube-scheduler@sha256:84c998f7610b356a5eed24f801c01b273cf3e83f081f25c9b16aa8136c2cafb1
      lastState:
        terminated:
          containerID: docker://41e10a741046c1b39f911dfd289f28e8ab6c51cd3725a40e0162c6f99a5a5916
          exitCode: 1
          finishedAt: "2025-03-21T07:38:52Z"
          reason: Error
          startedAt: "2025-03-12T13:24:22Z"
      name: kube-scheduler
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-03-21T07:59:44Z"
    hostIP: 192.168.49.2
    hostIPs:
    - ip: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: Burstable
    startTime: "2025-03-21T07:59:42Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-03-21T09:01:41Z"
    generateName: metrics-server-7fbb699795-
    labels:
      k8s-app: metrics-server
      pod-template-hash: 7fbb699795
    name: metrics-server-7fbb699795-m2h5c
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: metrics-server-7fbb699795
      uid: bade5a48-8dc6-4354-af35-ef3767efde9d
    resourceVersion: "617001"
    uid: 35157f7d-b904-4db3-97a1-5e6a5dad86f7
  spec:
    containers:
    - args:
      - --cert-dir=/tmp
      - --secure-port=4443
      - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
      - --kubelet-use-node-status-port
      - --metric-resolution=60s
      - --kubelet-insecure-tls
      image: registry.k8s.io/metrics-server/metrics-server:v0.7.2@sha256:ffcb2bf004d6aa0a17d90e0247cf94f2865c8901dcab4427034c341951c239f9
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /livez
          port: https
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: metrics-server
      ports:
      - containerPort: 4443
        name: https
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: https
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
      securityContext:
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-scdbz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: metrics-server
    serviceAccountName: metrics-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: tmp-dir
    - name: kube-api-access-scdbz
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T09:01:47Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T09:01:42Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T09:02:50Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T09:02:50Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T09:01:42Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://2c2b21796731d8d61492a6c7633e74e1b889aaecdf3bc008f941cbb8218ef8dd
      image: registry.k8s.io/metrics-server/metrics-server@sha256:ffcb2bf004d6aa0a17d90e0247cf94f2865c8901dcab4427034c341951c239f9
      imageID: docker-pullable://registry.k8s.io/metrics-server/metrics-server@sha256:ffcb2bf004d6aa0a17d90e0247cf94f2865c8901dcab4427034c341951c239f9
      lastState: {}
      name: metrics-server
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-21T09:01:47Z"
      volumeMounts:
      - mountPath: /tmp
        name: tmp-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-scdbz
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.49.2
    hostIPs:
    - ip: 192.168.49.2
    phase: Running
    podIP: 10.244.0.164
    podIPs:
    - ip: 10.244.0.164
    qosClass: Burstable
    startTime: "2025-03-21T09:01:42Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","integration-test":"storage-provisioner"},"name":"storage-provisioner","namespace":"kube-system"},"spec":{"containers":[{"command":["/storage-provisioner"],"image":"gcr.io/k8s-minikube/storage-provisioner:v5","imagePullPolicy":"IfNotPresent","name":"storage-provisioner","volumeMounts":[{"mountPath":"/tmp","name":"tmp"}]}],"hostNetwork":true,"serviceAccountName":"storage-provisioner","volumes":[{"hostPath":{"path":"/tmp","type":"Directory"},"name":"tmp"}]}}
    creationTimestamp: "2025-03-12T13:24:30Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      integration-test: storage-provisioner
    name: storage-provisioner
    namespace: kube-system
    resourceVersion: "613872"
    uid: 57fa662d-fde5-4173-bdb5-9da0e2f4ccaa
  spec:
    containers:
    - command:
      - /storage-provisioner
      image: gcr.io/k8s-minikube/storage-provisioner:v5
      imagePullPolicy: IfNotPresent
      name: storage-provisioner
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ftt5n
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: storage-provisioner
    serviceAccountName: storage-provisioner
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /tmp
        type: Directory
      name: tmp
    - name: kube-api-access-ftt5n
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T07:59:55Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-03-12T13:24:32Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T08:00:38Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T08:00:38Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-12T13:24:32Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://6e57d5e93d5173b70ae1dbd3b880dbf4b0d55ba8590c4060bd2a020ed43da368
      image: gcr.io/k8s-minikube/storage-provisioner:v5
      imageID: docker-pullable://gcr.io/k8s-minikube/storage-provisioner@sha256:18eb69d1418e854ad5a19e399310e52808a8321e4c441c1dddad8977a0d7a944
      lastState:
        terminated:
          containerID: docker://f89c05feb828a21b551cfd58134b24c26d15b8f954c15097e93301079adc1db5
          exitCode: 1
          finishedAt: "2025-03-21T08:00:23Z"
          reason: Error
          startedAt: "2025-03-21T07:59:52Z"
      name: storage-provisioner
      ready: true
      restartCount: 3
      started: true
      state:
        running:
          startedAt: "2025-03-21T08:00:37Z"
      volumeMounts:
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ftt5n
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.49.2
    hostIPs:
    - ip: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: BestEffort
    startTime: "2025-03-12T13:24:32Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-03-21T06:12:57Z"
    generateName: model-server-588897c84c-
    labels:
      app.kubernetes.io/name: model-server
      pod-template-hash: 588897c84c
    name: model-server-588897c84c-4xfxk
    namespace: prod
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: model-server-588897c84c
      uid: 658a32fb-681e-40f4-8245-e9187aed2763
    resourceVersion: "609264"
    uid: af49be65-d59c-48e9-a1d5-c51a65a054c8
  spec:
    containers:
    - env:
      - name: REDIS_HOST
        valueFrom:
          configMapKeyRef:
            key: hostname
            name: redis-config-v1
      - name: REDIS_PORT
        valueFrom:
          configMapKeyRef:
            key: port
            name: redis-config-v1
      - name: REDIS_PASSWORD
        valueFrom:
          secretKeyRef:
            key: db_password
            name: redis-secret-v1
      - name: MODEL_NAME
        valueFrom:
          configMapKeyRef:
            key: model_name
            name: model-server-config-v1
      image: model-server:latest
      imagePullPolicy: Never
      name: model-server
      ports:
      - containerPort: 8000
        name: http
        protocol: TCP
      resources:
        limits:
          cpu: "1"
          memory: 2Gi
        requests:
          cpu: "1"
          memory: 2Gi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lx4pp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-lx4pp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T06:12:57Z"
      message: '0/1 nodes are available: 1 Insufficient cpu. preemption: 0/1 nodes
        are available: 1 No preemption victims found for incoming pod.'
      reason: Unschedulable
      status: "False"
      type: PodScheduled
    phase: Pending
    qosClass: Guaranteed
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-03-21T06:12:57Z"
    generateName: redis-6cb764f4b8-
    labels:
      app.kubernetes.io/name: redis
      pod-template-hash: 6cb764f4b8
      role: master
    name: redis-6cb764f4b8-vsf5d
    namespace: prod
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: redis-6cb764f4b8
      uid: b683f7d8-b10b-4d6a-a03a-323b3975b4ec
    resourceVersion: "616922"
    uid: 7089c837-9d4d-4f49-b082-97756b0066e9
  spec:
    containers:
    - args:
      - --requirepass
      - $(REDIS_PASSWORD)
      command:
      - redis-server
      env:
      - name: REDIS_PASSWORD
        valueFrom:
          secretKeyRef:
            key: db_password
            name: redis-secret-v1
      image: redis:7.4.1
      imagePullPolicy: IfNotPresent
      name: redis
      ports:
      - containerPort: 6379
        name: redis
        protocol: TCP
      resources:
        limits:
          cpu: 200m
          memory: 200Mi
        requests:
          cpu: 200m
          memory: 200Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /data
        name: redis-storage
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ngqkt
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: redis-storage
      persistentVolumeClaim:
        claimName: redis-pvc
    - name: kube-api-access-ngqkt
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T09:01:43Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T09:01:42Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T09:01:43Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T09:01:43Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T09:01:42Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://cd6b3535a871d97345ed6b509bc06a5ea2a81500fc39b7386188ef7a4659036a
      image: redis:7.4.1
      imageID: docker-pullable://redis@sha256:bb142a9c18ac18a16713c1491d779697b4e107c22a97266616099d288237ef47
      lastState: {}
      name: redis
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-21T09:01:43Z"
      volumeMounts:
      - mountPath: /data
        name: redis-storage
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ngqkt
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.49.2
    hostIPs:
    - ip: 192.168.49.2
    phase: Running
    podIP: 10.244.0.162
    podIPs:
    - ip: 10.244.0.162
    qosClass: Guaranteed
    startTime: "2025-03-21T09:01:42Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-03-21T06:12:57Z"
    generateName: web-server-55bc6c44bc-
    labels:
      app.kubernetes.io/name: web-server
      pod-template-hash: 55bc6c44bc
    name: web-server-55bc6c44bc-zt8t7
    namespace: prod
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: web-server-55bc6c44bc
      uid: f03fbaf6-37d1-4847-a057-d72992ff7a15
    resourceVersion: "613832"
    uid: 9f109395-b836-4b03-b296-f84b5bc59594
  spec:
    containers:
    - env:
      - name: REDIS_HOST
        valueFrom:
          configMapKeyRef:
            key: hostname
            name: redis-config-v1
      - name: REDIS_PORT
        valueFrom:
          configMapKeyRef:
            key: port
            name: redis-config-v1
      - name: REDIS_PASSWORD
        valueFrom:
          secretKeyRef:
            key: db_password
            name: redis-secret-v1
      - name: MODEL_SERVER_URL
        valueFrom:
          configMapKeyRef:
            key: model_server_url
            name: model-server-config-v1
      image: web-server:latest
      imagePullPolicy: Never
      name: web-server
      ports:
      - containerPort: 80
        name: http
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ffpx8
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-ffpx8
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T07:59:56Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T06:12:57Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T07:59:56Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T07:59:56Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-21T06:12:57Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://03955ce93d08c029758042e5c47544ee6c320d2803066d1639811704c82b1603
      image: web-server:latest
      imageID: docker://sha256:6ee8c7edd8478068f066ce02f4a5f814fb983b07bff0d8ad5b1227b9ea91832f
      lastState:
        terminated:
          containerID: docker://31c7460bce6275c1e0340ced65b6b7467be748eb49d6cfd827988643518fcef6
          exitCode: 0
          finishedAt: "2025-03-21T07:38:54Z"
          reason: Completed
          startedAt: "2025-03-21T06:12:59Z"
      name: web-server
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-03-21T07:59:54Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ffpx8
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.49.2
    hostIPs:
    - ip: 192.168.49.2
    phase: Running
    podIP: 10.244.0.161
    podIPs:
    - ip: 10.244.0.161
    qosClass: BestEffort
    startTime: "2025-03-21T06:12:57Z"
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2025-03-20T14:11:50Z"
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
    resourceVersion: "561335"
    uid: 4826486b-1987-4e3f-a4fe-414e64a4f9bd
  spec:
    clusterIP: 10.96.0.1
    clusterIPs:
    - 10.96.0.1
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 8443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: fastapi-release-default
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-03-21T07:16:37Z"
    labels:
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: model-server
      app.kubernetes.io/part-of: fastapi-app
    name: model-server-service
    namespace: default
    resourceVersion: "612535"
    uid: d74ddfa2-2656-495f-97c7-ba0f5301eede
  spec:
    clusterIP: 10.109.224.18
    clusterIPs:
    - 10.109.224.18
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 8000
      protocol: TCP
      targetPort: 8000
    selector:
      app.kubernetes.io/name: model-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: fastapi-release-default
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-03-21T07:16:37Z"
    labels:
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: redis
      app.kubernetes.io/part-of: fastapi-app
      role: master
    name: redis-service
    namespace: default
    resourceVersion: "612539"
    uid: 398a9086-96b2-476e-8511-e00222dd4d4b
  spec:
    clusterIP: 10.109.46.22
    clusterIPs:
    - 10.109.46.22
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: redis
      port: 6379
      protocol: TCP
      targetPort: 6379
    selector:
      app.kubernetes.io/name: redis
      role: master
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: fastapi-release-default
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-03-21T07:16:37Z"
    labels:
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: web-server
      app.kubernetes.io/part-of: fastapi-app
    name: web-server-service
    namespace: default
    resourceVersion: "612544"
    uid: 0727fd84-03a7-4192-950c-071d9de645c8
  spec:
    clusterIP: 10.99.78.113
    clusterIPs:
    - 10.99.78.113
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      nodePort: 32221
      port: 80
      protocol: TCP
      targetPort: 80
    selector:
      app.kubernetes.io/name: web-server
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: fastapi-release-dev
      meta.helm.sh/release-namespace: dev
    creationTimestamp: "2025-03-21T05:50:08Z"
    labels:
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: model-server
      app.kubernetes.io/part-of: fastapi-app
    name: model-server-service
    namespace: dev
    resourceVersion: "607988"
    uid: df8e3383-913c-4ff7-80ee-b6688e730fd7
  spec:
    clusterIP: 10.108.92.148
    clusterIPs:
    - 10.108.92.148
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 8000
      protocol: TCP
      targetPort: 8000
    selector:
      app.kubernetes.io/name: model-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: fastapi-release-dev
      meta.helm.sh/release-namespace: dev
    creationTimestamp: "2025-03-21T05:50:08Z"
    labels:
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: redis
      app.kubernetes.io/part-of: fastapi-app
      role: master
    name: redis-service
    namespace: dev
    resourceVersion: "607993"
    uid: 053b646c-76ce-4b69-8d90-41b0458caa8e
  spec:
    clusterIP: 10.105.55.241
    clusterIPs:
    - 10.105.55.241
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: redis
      port: 6379
      protocol: TCP
      targetPort: 6379
    selector:
      app.kubernetes.io/name: redis
      role: master
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: fastapi-release-dev
      meta.helm.sh/release-namespace: dev
    creationTimestamp: "2025-03-21T05:50:08Z"
    labels:
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: web-server
      app.kubernetes.io/part-of: fastapi-app
    name: web-server-service
    namespace: dev
    resourceVersion: "607999"
    uid: 70b766d6-52e0-49a6-bee5-1e4dd5145ba3
  spec:
    clusterIP: 10.97.115.251
    clusterIPs:
    - 10.97.115.251
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      nodePort: 30000
      port: 80
      protocol: TCP
      targetPort: 80
    selector:
      app.kubernetes.io/name: web-server
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/port: "9153"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-03-12T13:24:28Z"
    labels:
      k8s-app: kube-dns
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: CoreDNS
    name: kube-dns
    namespace: kube-system
    resourceVersion: "277"
    uid: 5e159750-edcc-4897-a351-80cfa28d3ccf
  spec:
    clusterIP: 10.96.0.10
    clusterIPs:
    - 10.96.0.10
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: dns
      port: 53
      protocol: UDP
      targetPort: 53
    - name: dns-tcp
      port: 53
      protocol: TCP
      targetPort: 53
    - name: metrics
      port: 9153
      protocol: TCP
      targetPort: 9153
    selector:
      k8s-app: kube-dns
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"metrics-server","kubernetes.io/minikube-addons":"metrics-server","kubernetes.io/minikube-addons-endpoint":"metrics-server","kubernetes.io/name":"Metrics-server"},"name":"metrics-server","namespace":"kube-system"},"spec":{"ports":[{"name":"https","port":443,"protocol":"TCP","targetPort":"https"}],"selector":{"k8s-app":"metrics-server"}}}
    creationTimestamp: "2025-03-21T09:01:41Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: metrics-server
      kubernetes.io/minikube-addons: metrics-server
      kubernetes.io/minikube-addons-endpoint: metrics-server
      kubernetes.io/name: Metrics-server
    name: metrics-server
    namespace: kube-system
    resourceVersion: "616877"
    uid: bd7f0f3e-39c6-4f90-a687-13131ea92743
  spec:
    clusterIP: 10.98.241.84
    clusterIPs:
    - 10.98.241.84
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: https
    selector:
      k8s-app: metrics-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: fastapi-release-prod
      meta.helm.sh/release-namespace: prod
    creationTimestamp: "2025-03-21T06:12:57Z"
    labels:
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: model-server
      app.kubernetes.io/part-of: fastapi-app
    name: model-server-service
    namespace: prod
    resourceVersion: "609230"
    uid: 46a02be8-d93d-454f-9c89-3e1721914069
  spec:
    clusterIP: 10.106.183.212
    clusterIPs:
    - 10.106.183.212
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 8000
      protocol: TCP
      targetPort: 8000
    selector:
      app.kubernetes.io/name: model-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: fastapi-release-prod
      meta.helm.sh/release-namespace: prod
    creationTimestamp: "2025-03-21T06:12:57Z"
    labels:
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: redis
      app.kubernetes.io/part-of: fastapi-app
      role: master
    name: redis-service
    namespace: prod
    resourceVersion: "609237"
    uid: 94726a58-8c6b-4f7b-a275-7b5b7323e683
  spec:
    clusterIP: 10.96.238.197
    clusterIPs:
    - 10.96.238.197
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: redis
      port: 6379
      protocol: TCP
      targetPort: 6379
    selector:
      app.kubernetes.io/name: redis
      role: master
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: fastapi-release-prod
      meta.helm.sh/release-namespace: prod
    creationTimestamp: "2025-03-21T06:12:57Z"
    labels:
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: web-server
      app.kubernetes.io/part-of: fastapi-app
    name: web-server-service
    namespace: prod
    resourceVersion: "609242"
    uid: ab4c9376-4c97-4313-b89a-05eee38fbb68
  spec:
    clusterIP: 10.98.3.86
    clusterIPs:
    - 10.98.3.86
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      nodePort: 30001
      port: 80
      protocol: TCP
      targetPort: 80
    selector:
      app.kubernetes.io/name: web-server
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-03-12T13:24:28Z"
    generation: 1
    labels:
      k8s-app: kube-proxy
    name: kube-proxy
    namespace: kube-system
    resourceVersion: "613821"
    uid: aad309d7-52ea-486f-a891-bda6e445a69a
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-proxy
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-proxy
      spec:
        containers:
        - command:
          - /usr/local/bin/kube-proxy
          - --config=/var/lib/kube-proxy/config.conf
          - --hostname-override=$(NODE_NAME)
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: registry.k8s.io/kube-proxy:v1.32.0
          imagePullPolicy: IfNotPresent
          name: kube-proxy
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kube-proxy
            name: kube-proxy
          - mountPath: /run/xtables.lock
            name: xtables-lock
          - mountPath: /lib/modules
            name: lib-modules
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kube-proxy
        serviceAccountName: kube-proxy
        terminationGracePeriodSeconds: 30
        tolerations:
        - operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: kube-proxy
          name: kube-proxy
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - hostPath:
            path: /lib/modules
            type: ""
          name: lib-modules
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 1
    desiredNumberScheduled: 1
    numberAvailable: 1
    numberMisscheduled: 0
    numberReady: 1
    observedGeneration: 1
    updatedNumberScheduled: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: fastapi-release-default
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-03-21T07:16:37Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: model-server
      app.kubernetes.io/part-of: fastapi-app
    name: model-server
    namespace: default
    resourceVersion: "613086"
    uid: 1557a97b-245d-4808-b506-8d6c53093474
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: model-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: model-server
      spec:
        containers:
        - env:
          - name: REDIS_HOST
            valueFrom:
              configMapKeyRef:
                key: hostname
                name: redis-config-v1
          - name: REDIS_PORT
            valueFrom:
              configMapKeyRef:
                key: port
                name: redis-config-v1
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: db_password
                name: redis-secret-v1
          - name: MODEL_NAME
            valueFrom:
              configMapKeyRef:
                key: model_name
                name: model-server-config-v1
          image: model-server:latest
          imagePullPolicy: Never
          name: model-server
          ports:
          - containerPort: 8000
            name: http
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 2Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    conditions:
    - lastTransitionTime: "2025-03-21T07:16:37Z"
      lastUpdateTime: "2025-03-21T07:16:37Z"
      message: Deployment does not have minimum availability.
      reason: MinimumReplicasUnavailable
      status: "False"
      type: Available
    - lastTransitionTime: "2025-03-21T07:26:38Z"
      lastUpdateTime: "2025-03-21T07:26:38Z"
      message: ReplicaSet "model-server-588897c84c" has timed out progressing.
      reason: ProgressDeadlineExceeded
      status: "False"
      type: Progressing
    observedGeneration: 1
    replicas: 1
    unavailableReplicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: fastapi-release-default
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-03-21T07:16:37Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: redis
      app.kubernetes.io/part-of: fastapi-app
    name: redis
    namespace: default
    resourceVersion: "616933"
    uid: b466b4ad-89b0-4c2a-97ae-1b6cd1f7fbf9
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: redis
        role: master
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: redis
          role: master
      spec:
        containers:
        - args:
          - --requirepass
          - $(REDIS_PASSWORD)
          command:
          - redis-server
          env:
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: db_password
                name: redis-secret-v1
          image: redis:7.4.1
          imagePullPolicy: IfNotPresent
          name: redis
          ports:
          - containerPort: 6379
            name: redis
            protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: redis-storage
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: redis-storage
          persistentVolumeClaim:
            claimName: redis-pvc
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-03-21T09:01:44Z"
      lastUpdateTime: "2025-03-21T09:01:44Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-03-21T09:01:44Z"
      lastUpdateTime: "2025-03-21T09:01:44Z"
      message: ReplicaSet "redis-6cb764f4b8" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: fastapi-release-default
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-03-21T07:16:37Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: web-server
      app.kubernetes.io/part-of: fastapi-app
    name: web-server
    namespace: default
    resourceVersion: "613835"
    uid: 5d961b85-76d3-42eb-8cfb-82b887fd17fc
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: web-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: web-server
      spec:
        containers:
        - env:
          - name: REDIS_HOST
            valueFrom:
              configMapKeyRef:
                key: hostname
                name: redis-config-v1
          - name: REDIS_PORT
            valueFrom:
              configMapKeyRef:
                key: port
                name: redis-config-v1
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: db_password
                name: redis-secret-v1
          - name: MODEL_SERVER_URL
            valueFrom:
              configMapKeyRef:
                key: model_server_url
                name: model-server-config-v1
          image: web-server:latest
          imagePullPolicy: Never
          name: web-server
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-03-21T07:16:37Z"
      lastUpdateTime: "2025-03-21T07:16:39Z"
      message: ReplicaSet "web-server-55bc6c44bc" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-03-21T07:59:56Z"
      lastUpdateTime: "2025-03-21T07:59:56Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: fastapi-release-dev
      meta.helm.sh/release-namespace: dev
    creationTimestamp: "2025-03-21T05:50:08Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: model-server
      app.kubernetes.io/part-of: fastapi-app
    name: model-server
    namespace: dev
    resourceVersion: "616896"
    uid: 0cdf8df9-5d62-4850-ae8c-2346f72c2f49
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: model-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: model-server
      spec:
        containers:
        - env:
          - name: REDIS_HOST
            valueFrom:
              configMapKeyRef:
                key: hostname
                name: redis-config-v1
          - name: REDIS_PORT
            valueFrom:
              configMapKeyRef:
                key: port
                name: redis-config-v1
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: db_password
                name: redis-secret-v1
          - name: MODEL_NAME
            valueFrom:
              configMapKeyRef:
                key: model_name
                name: model-server-config-v1
          image: model-server:latest
          imagePullPolicy: Never
          name: model-server
          ports:
          - containerPort: 8000
            name: http
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 2Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    conditions:
    - lastTransitionTime: "2025-03-21T05:50:08Z"
      lastUpdateTime: "2025-03-21T05:50:10Z"
      message: ReplicaSet "model-server-588897c84c" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-03-21T09:01:41Z"
      lastUpdateTime: "2025-03-21T09:01:41Z"
      message: Deployment does not have minimum availability.
      reason: MinimumReplicasUnavailable
      status: "False"
      type: Available
    observedGeneration: 1
    replicas: 1
    unavailableReplicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: fastapi-release-dev
      meta.helm.sh/release-namespace: dev
    creationTimestamp: "2025-03-21T05:50:08Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: redis
      app.kubernetes.io/part-of: fastapi-app
    name: redis
    namespace: dev
    resourceVersion: "613804"
    uid: 97dc26b7-77b5-46be-b559-46c6f8ebd3b7
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: redis
        role: master
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: redis
          role: master
      spec:
        containers:
        - args:
          - --requirepass
          - $(REDIS_PASSWORD)
          command:
          - redis-server
          env:
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: db_password
                name: redis-secret-v1
          image: redis:7.4.1
          imagePullPolicy: IfNotPresent
          name: redis
          ports:
          - containerPort: 6379
            name: redis
            protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: redis-storage
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: redis-storage
          persistentVolumeClaim:
            claimName: redis-pvc
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-03-21T05:50:08Z"
      lastUpdateTime: "2025-03-21T05:50:10Z"
      message: ReplicaSet "redis-6cb764f4b8" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-03-21T07:59:55Z"
      lastUpdateTime: "2025-03-21T07:59:55Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: fastapi-release-dev
      meta.helm.sh/release-namespace: dev
    creationTimestamp: "2025-03-21T05:50:08Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: web-server
      app.kubernetes.io/part-of: fastapi-app
    name: web-server
    namespace: dev
    resourceVersion: "613837"
    uid: 73132f85-2e34-4934-8cda-a7936766584a
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: web-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: web-server
      spec:
        containers:
        - env:
          - name: REDIS_HOST
            valueFrom:
              configMapKeyRef:
                key: hostname
                name: redis-config-v1
          - name: REDIS_PORT
            valueFrom:
              configMapKeyRef:
                key: port
                name: redis-config-v1
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: db_password
                name: redis-secret-v1
          - name: MODEL_SERVER_URL
            valueFrom:
              configMapKeyRef:
                key: model_server_url
                name: model-server-config-v1
          image: web-server:latest
          imagePullPolicy: Never
          name: web-server
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-03-21T05:50:08Z"
      lastUpdateTime: "2025-03-21T05:50:10Z"
      message: ReplicaSet "web-server-55bc6c44bc" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-03-21T07:59:56Z"
      lastUpdateTime: "2025-03-21T07:59:56Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-03-12T13:24:28Z"
    generation: 2
    labels:
      k8s-app: kube-dns
    name: coredns
    namespace: kube-system
    resourceVersion: "613864"
    uid: 82854f98-54cd-4e7f-b0b6-ea7670950e13
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-dns
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: registry.k8s.io/coredns/coredns:v1.11.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            name: coredns
          name: config-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-03-12T13:24:33Z"
      lastUpdateTime: "2025-03-12T13:24:33Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-03-12T13:24:33Z"
      lastUpdateTime: "2025-03-12T13:24:42Z"
      message: ReplicaSet "coredns-668d6bf9bc" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"metrics-server","kubernetes.io/minikube-addons":"metrics-server"},"name":"metrics-server","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"k8s-app":"metrics-server"}},"strategy":{"rollingUpdate":{"maxUnavailable":0}},"template":{"metadata":{"labels":{"k8s-app":"metrics-server"},"name":"metrics-server"},"spec":{"containers":[{"args":["--cert-dir=/tmp","--secure-port=4443","--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname","--kubelet-use-node-status-port","--metric-resolution=60s","--kubelet-insecure-tls"],"image":"registry.k8s.io/metrics-server/metrics-server:v0.7.2@sha256:ffcb2bf004d6aa0a17d90e0247cf94f2865c8901dcab4427034c341951c239f9","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/livez","port":"https","scheme":"HTTPS"},"periodSeconds":10},"name":"metrics-server","ports":[{"containerPort":4443,"name":"https","protocol":"TCP"}],"readinessProbe":{"failureThreshold":3,"httpGet":{"path":"/readyz","port":"https","scheme":"HTTPS"},"periodSeconds":10},"resources":{"requests":{"cpu":"100m","memory":"200Mi"}},"securityContext":{"readOnlyRootFilesystem":true,"runAsNonRoot":true,"runAsUser":1000},"volumeMounts":[{"mountPath":"/tmp","name":"tmp-dir"}]}],"priorityClassName":"system-cluster-critical","serviceAccountName":"metrics-server","volumes":[{"emptyDir":{},"name":"tmp-dir"}]}}}}
    creationTimestamp: "2025-03-21T09:01:41Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: metrics-server
      kubernetes.io/minikube-addons: metrics-server
    name: metrics-server
    namespace: kube-system
    resourceVersion: "617006"
    uid: 20949b2d-35d7-4809-b2fc-cf1b9adf3c02
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: metrics-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 0
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
        name: metrics-server
      spec:
        containers:
        - args:
          - --cert-dir=/tmp
          - --secure-port=4443
          - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
          - --kubelet-use-node-status-port
          - --metric-resolution=60s
          - --kubelet-insecure-tls
          image: registry.k8s.io/metrics-server/metrics-server:v0.7.2@sha256:ffcb2bf004d6aa0a17d90e0247cf94f2865c8901dcab4427034c341951c239f9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: https
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: metrics-server
          ports:
          - containerPort: 4443
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: https
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 100m
              memory: 200Mi
          securityContext:
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: tmp-dir
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-03-21T09:02:50Z"
      lastUpdateTime: "2025-03-21T09:02:50Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-03-21T09:01:41Z"
      lastUpdateTime: "2025-03-21T09:02:50Z"
      message: ReplicaSet "metrics-server-7fbb699795" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: fastapi-release-prod
      meta.helm.sh/release-namespace: prod
    creationTimestamp: "2025-03-21T06:12:57Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: model-server
      app.kubernetes.io/part-of: fastapi-app
    name: model-server
    namespace: prod
    resourceVersion: "609846"
    uid: 8b37caab-2604-4fd4-9a22-11e1e82cabdd
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: model-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: model-server
      spec:
        containers:
        - env:
          - name: REDIS_HOST
            valueFrom:
              configMapKeyRef:
                key: hostname
                name: redis-config-v1
          - name: REDIS_PORT
            valueFrom:
              configMapKeyRef:
                key: port
                name: redis-config-v1
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: db_password
                name: redis-secret-v1
          - name: MODEL_NAME
            valueFrom:
              configMapKeyRef:
                key: model_name
                name: model-server-config-v1
          image: model-server:latest
          imagePullPolicy: Never
          name: model-server
          ports:
          - containerPort: 8000
            name: http
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 2Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    conditions:
    - lastTransitionTime: "2025-03-21T06:12:57Z"
      lastUpdateTime: "2025-03-21T06:12:57Z"
      message: Deployment does not have minimum availability.
      reason: MinimumReplicasUnavailable
      status: "False"
      type: Available
    - lastTransitionTime: "2025-03-21T06:22:58Z"
      lastUpdateTime: "2025-03-21T06:22:58Z"
      message: ReplicaSet "model-server-588897c84c" has timed out progressing.
      reason: ProgressDeadlineExceeded
      status: "False"
      type: Progressing
    observedGeneration: 1
    replicas: 1
    unavailableReplicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: fastapi-release-prod
      meta.helm.sh/release-namespace: prod
    creationTimestamp: "2025-03-21T06:12:57Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: redis
      app.kubernetes.io/part-of: fastapi-app
    name: redis
    namespace: prod
    resourceVersion: "616926"
    uid: f765505e-cc41-4567-8214-c19c82ee16d4
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: redis
        role: master
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: redis
          role: master
      spec:
        containers:
        - args:
          - --requirepass
          - $(REDIS_PASSWORD)
          command:
          - redis-server
          env:
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: db_password
                name: redis-secret-v1
          image: redis:7.4.1
          imagePullPolicy: IfNotPresent
          name: redis
          ports:
          - containerPort: 6379
            name: redis
            protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: redis-storage
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: redis-storage
          persistentVolumeClaim:
            claimName: redis-pvc
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-03-21T09:01:43Z"
      lastUpdateTime: "2025-03-21T09:01:43Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-03-21T09:01:43Z"
      lastUpdateTime: "2025-03-21T09:01:43Z"
      message: ReplicaSet "redis-6cb764f4b8" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: fastapi-release-prod
      meta.helm.sh/release-namespace: prod
    creationTimestamp: "2025-03-21T06:12:57Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: web-server
      app.kubernetes.io/part-of: fastapi-app
    name: web-server
    namespace: prod
    resourceVersion: "613840"
    uid: 7314ee50-4de0-4fb6-a8dd-1e6ebf023493
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: web-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: web-server
      spec:
        containers:
        - env:
          - name: REDIS_HOST
            valueFrom:
              configMapKeyRef:
                key: hostname
                name: redis-config-v1
          - name: REDIS_PORT
            valueFrom:
              configMapKeyRef:
                key: port
                name: redis-config-v1
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: db_password
                name: redis-secret-v1
          - name: MODEL_SERVER_URL
            valueFrom:
              configMapKeyRef:
                key: model_server_url
                name: model-server-config-v1
          image: web-server:latest
          imagePullPolicy: Never
          name: web-server
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-03-21T06:12:57Z"
      lastUpdateTime: "2025-03-21T06:12:59Z"
      message: ReplicaSet "web-server-55bc6c44bc" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-03-21T07:59:56Z"
      lastUpdateTime: "2025-03-21T07:59:56Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: fastapi-release-default
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-03-21T07:16:37Z"
    generation: 1
    labels:
      app.kubernetes.io/name: model-server
      pod-template-hash: 588897c84c
    name: model-server-588897c84c
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: model-server
      uid: 1557a97b-245d-4808-b506-8d6c53093474
    resourceVersion: "612566"
    uid: 4686b832-9764-46e2-bc5a-2c4aeb60eacb
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: model-server
        pod-template-hash: 588897c84c
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: model-server
          pod-template-hash: 588897c84c
      spec:
        containers:
        - env:
          - name: REDIS_HOST
            valueFrom:
              configMapKeyRef:
                key: hostname
                name: redis-config-v1
          - name: REDIS_PORT
            valueFrom:
              configMapKeyRef:
                key: port
                name: redis-config-v1
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: db_password
                name: redis-secret-v1
          - name: MODEL_NAME
            valueFrom:
              configMapKeyRef:
                key: model_name
                name: model-server-config-v1
          image: model-server:latest
          imagePullPolicy: Never
          name: model-server
          ports:
          - containerPort: 8000
            name: http
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 2Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    fullyLabeledReplicas: 1
    observedGeneration: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: fastapi-release-default
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-03-21T07:16:37Z"
    generation: 1
    labels:
      app.kubernetes.io/name: redis
      pod-template-hash: 6cb764f4b8
      role: master
    name: redis-6cb764f4b8
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: redis
      uid: b466b4ad-89b0-4c2a-97ae-1b6cd1f7fbf9
    resourceVersion: "616931"
    uid: cb54e2fc-25ae-448e-a6e3-d93c7aa47093
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: redis
        pod-template-hash: 6cb764f4b8
        role: master
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: redis
          pod-template-hash: 6cb764f4b8
          role: master
      spec:
        containers:
        - args:
          - --requirepass
          - $(REDIS_PASSWORD)
          command:
          - redis-server
          env:
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: db_password
                name: redis-secret-v1
          image: redis:7.4.1
          imagePullPolicy: IfNotPresent
          name: redis
          ports:
          - containerPort: 6379
            name: redis
            protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: redis-storage
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: redis-storage
          persistentVolumeClaim:
            claimName: redis-pvc
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: fastapi-release-default
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-03-21T07:16:37Z"
    generation: 1
    labels:
      app.kubernetes.io/name: web-server
      pod-template-hash: 55bc6c44bc
    name: web-server-55bc6c44bc
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: web-server
      uid: 5d961b85-76d3-42eb-8cfb-82b887fd17fc
    resourceVersion: "613830"
    uid: ced1fb5f-a5f2-4afe-9265-11299e0181ea
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: web-server
        pod-template-hash: 55bc6c44bc
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: web-server
          pod-template-hash: 55bc6c44bc
      spec:
        containers:
        - env:
          - name: REDIS_HOST
            valueFrom:
              configMapKeyRef:
                key: hostname
                name: redis-config-v1
          - name: REDIS_PORT
            valueFrom:
              configMapKeyRef:
                key: port
                name: redis-config-v1
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: db_password
                name: redis-secret-v1
          - name: MODEL_SERVER_URL
            valueFrom:
              configMapKeyRef:
                key: model_server_url
                name: model-server-config-v1
          image: web-server:latest
          imagePullPolicy: Never
          name: web-server
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: fastapi-release-dev
      meta.helm.sh/release-namespace: dev
    creationTimestamp: "2025-03-21T05:50:08Z"
    generation: 1
    labels:
      app.kubernetes.io/name: model-server
      pod-template-hash: 588897c84c
    name: model-server-588897c84c
    namespace: dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: model-server
      uid: 0cdf8df9-5d62-4850-ae8c-2346f72c2f49
    resourceVersion: "616895"
    uid: 144f3f8b-a5c8-4b77-98d4-0300a843734f
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: model-server
        pod-template-hash: 588897c84c
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: model-server
          pod-template-hash: 588897c84c
      spec:
        containers:
        - env:
          - name: REDIS_HOST
            valueFrom:
              configMapKeyRef:
                key: hostname
                name: redis-config-v1
          - name: REDIS_PORT
            valueFrom:
              configMapKeyRef:
                key: port
                name: redis-config-v1
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: db_password
                name: redis-secret-v1
          - name: MODEL_NAME
            valueFrom:
              configMapKeyRef:
                key: model_name
                name: model-server-config-v1
          image: model-server:latest
          imagePullPolicy: Never
          name: model-server
          ports:
          - containerPort: 8000
            name: http
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 2Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    fullyLabeledReplicas: 1
    observedGeneration: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: fastapi-release-dev
      meta.helm.sh/release-namespace: dev
    creationTimestamp: "2025-03-21T05:50:08Z"
    generation: 1
    labels:
      app.kubernetes.io/name: redis
      pod-template-hash: 6cb764f4b8
      role: master
    name: redis-6cb764f4b8
    namespace: dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: redis
      uid: 97dc26b7-77b5-46be-b559-46c6f8ebd3b7
    resourceVersion: "613793"
    uid: 3eaacbec-4010-4491-aab8-1112561e3dc8
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: redis
        pod-template-hash: 6cb764f4b8
        role: master
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: redis
          pod-template-hash: 6cb764f4b8
          role: master
      spec:
        containers:
        - args:
          - --requirepass
          - $(REDIS_PASSWORD)
          command:
          - redis-server
          env:
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: db_password
                name: redis-secret-v1
          image: redis:7.4.1
          imagePullPolicy: IfNotPresent
          name: redis
          ports:
          - containerPort: 6379
            name: redis
            protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: redis-storage
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: redis-storage
          persistentVolumeClaim:
            claimName: redis-pvc
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: fastapi-release-dev
      meta.helm.sh/release-namespace: dev
    creationTimestamp: "2025-03-21T05:50:08Z"
    generation: 1
    labels:
      app.kubernetes.io/name: web-server
      pod-template-hash: 55bc6c44bc
    name: web-server-55bc6c44bc
    namespace: dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: web-server
      uid: 73132f85-2e34-4934-8cda-a7936766584a
    resourceVersion: "613831"
    uid: 2da4d6df-0fbc-494c-bf4e-3559b41f14c0
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: web-server
        pod-template-hash: 55bc6c44bc
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: web-server
          pod-template-hash: 55bc6c44bc
      spec:
        containers:
        - env:
          - name: REDIS_HOST
            valueFrom:
              configMapKeyRef:
                key: hostname
                name: redis-config-v1
          - name: REDIS_PORT
            valueFrom:
              configMapKeyRef:
                key: port
                name: redis-config-v1
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: db_password
                name: redis-secret-v1
          - name: MODEL_SERVER_URL
            valueFrom:
              configMapKeyRef:
                key: model_server_url
                name: model-server-config-v1
          image: web-server:latest
          imagePullPolicy: Never
          name: web-server
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-03-12T13:24:33Z"
    generation: 1
    labels:
      k8s-app: kube-dns
      pod-template-hash: 668d6bf9bc
    name: coredns-668d6bf9bc
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: coredns
      uid: 82854f98-54cd-4e7f-b0b6-ea7670950e13
    resourceVersion: "613863"
    uid: 2cb08c8b-b2eb-4141-bc83-e8cb891d87ef
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: kube-dns
        pod-template-hash: 668d6bf9bc
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
          pod-template-hash: 668d6bf9bc
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: registry.k8s.io/coredns/coredns:v1.11.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            name: coredns
          name: config-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-03-21T09:01:41Z"
    generation: 1
    labels:
      k8s-app: metrics-server
      pod-template-hash: 7fbb699795
    name: metrics-server-7fbb699795
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: metrics-server
      uid: 20949b2d-35d7-4809-b2fc-cf1b9adf3c02
    resourceVersion: "617004"
    uid: bade5a48-8dc6-4354-af35-ef3767efde9d
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: metrics-server
        pod-template-hash: 7fbb699795
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
          pod-template-hash: 7fbb699795
        name: metrics-server
      spec:
        containers:
        - args:
          - --cert-dir=/tmp
          - --secure-port=4443
          - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
          - --kubelet-use-node-status-port
          - --metric-resolution=60s
          - --kubelet-insecure-tls
          image: registry.k8s.io/metrics-server/metrics-server:v0.7.2@sha256:ffcb2bf004d6aa0a17d90e0247cf94f2865c8901dcab4427034c341951c239f9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: https
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: metrics-server
          ports:
          - containerPort: 4443
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: https
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 100m
              memory: 200Mi
          securityContext:
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: tmp-dir
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: fastapi-release-prod
      meta.helm.sh/release-namespace: prod
    creationTimestamp: "2025-03-21T06:12:57Z"
    generation: 1
    labels:
      app.kubernetes.io/name: model-server
      pod-template-hash: 588897c84c
    name: model-server-588897c84c
    namespace: prod
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: model-server
      uid: 8b37caab-2604-4fd4-9a22-11e1e82cabdd
    resourceVersion: "609272"
    uid: 658a32fb-681e-40f4-8245-e9187aed2763
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: model-server
        pod-template-hash: 588897c84c
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: model-server
          pod-template-hash: 588897c84c
      spec:
        containers:
        - env:
          - name: REDIS_HOST
            valueFrom:
              configMapKeyRef:
                key: hostname
                name: redis-config-v1
          - name: REDIS_PORT
            valueFrom:
              configMapKeyRef:
                key: port
                name: redis-config-v1
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: db_password
                name: redis-secret-v1
          - name: MODEL_NAME
            valueFrom:
              configMapKeyRef:
                key: model_name
                name: model-server-config-v1
          image: model-server:latest
          imagePullPolicy: Never
          name: model-server
          ports:
          - containerPort: 8000
            name: http
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 2Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    fullyLabeledReplicas: 1
    observedGeneration: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: fastapi-release-prod
      meta.helm.sh/release-namespace: prod
    creationTimestamp: "2025-03-21T06:12:57Z"
    generation: 1
    labels:
      app.kubernetes.io/name: redis
      pod-template-hash: 6cb764f4b8
      role: master
    name: redis-6cb764f4b8
    namespace: prod
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: redis
      uid: f765505e-cc41-4567-8214-c19c82ee16d4
    resourceVersion: "616924"
    uid: b683f7d8-b10b-4d6a-a03a-323b3975b4ec
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: redis
        pod-template-hash: 6cb764f4b8
        role: master
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: redis
          pod-template-hash: 6cb764f4b8
          role: master
      spec:
        containers:
        - args:
          - --requirepass
          - $(REDIS_PASSWORD)
          command:
          - redis-server
          env:
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: db_password
                name: redis-secret-v1
          image: redis:7.4.1
          imagePullPolicy: IfNotPresent
          name: redis
          ports:
          - containerPort: 6379
            name: redis
            protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: redis-storage
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: redis-storage
          persistentVolumeClaim:
            claimName: redis-pvc
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: fastapi-release-prod
      meta.helm.sh/release-namespace: prod
    creationTimestamp: "2025-03-21T06:12:57Z"
    generation: 1
    labels:
      app.kubernetes.io/name: web-server
      pod-template-hash: 55bc6c44bc
    name: web-server-55bc6c44bc
    namespace: prod
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: web-server
      uid: 7314ee50-4de0-4fb6-a8dd-1e6ebf023493
    resourceVersion: "613836"
    uid: f03fbaf6-37d1-4847-a057-d72992ff7a15
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: web-server
        pod-template-hash: 55bc6c44bc
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: web-server
          pod-template-hash: 55bc6c44bc
      spec:
        containers:
        - env:
          - name: REDIS_HOST
            valueFrom:
              configMapKeyRef:
                key: hostname
                name: redis-config-v1
          - name: REDIS_PORT
            valueFrom:
              configMapKeyRef:
                key: port
                name: redis-config-v1
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: db_password
                name: redis-secret-v1
          - name: MODEL_SERVER_URL
            valueFrom:
              configMapKeyRef:
                key: model_server_url
                name: model-server-config-v1
          image: web-server:latest
          imagePullPolicy: Never
          name: web-server
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
kind: List
metadata:
  resourceVersion: ""
